version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10-browsers
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - run: mkdir test-reports

      - run:
          name: Download Selenium
          command: curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
          
      - run:
          name: Start Selenium
          command: java -jar selenium-server-standalone-3.5.3.jar -log test-reports/selenium.log
          background: true
        
      # run tests!
      - run: yarn test

    # build:
    # docker:
    #   - image: circleci/php:7.3.0-node-browsers
    #   - image: circleci/mariadb:10.4
    # environment:
    #   - DB_CONNECTION: circle_testing
    # working_directory: ~/p
    # steps:
    #   - checkout
    #   - run:
    #       name: Update apt-get
    #       command: sudo apt-get update
    #   - run:
    #       name: Docker php extensions install
    #       command: sudo docker-php-ext-install pdo_mysql
    #   - restore_cache:
    #       keys:
    #         - v1-dependencies-{{ checksum "composer.json" }}
    #         - v1-dependencies-
    #   - run:
    #       name: Install PHP libraries
    #       command: cd app && composer install -n --prefer-dist
    #   - save_cache:
    #       paths:
    #         - ./vendor
    #       key: v1-dependencies-{{ checksum "composer.json" }}
    #   - run:
    #       name: Run PHPUnit
    #       command: cd app && vendor/bin/phpunit

#   deploy:
#     machine:
#       image: circleci/classic:201808-01
#     steps:
#       - checkout
#       - add_ssh_keys:
#           fingerprints:
#             - "${KEY_FINGERPRINT}"  
#       - run: ssh ${USER_NAME}@${HOST_NAME} 'cd /var/www/app/ && git pull origin master '

 
# workflows:
#   version: 2
#   build_and_deploy:
#     jobs:
#       - build
#       - dusk
#       - deploy:
#           requires:
#             - build
#             - dusk
#           filters:
#             branches:
#               only: master